return {
--     {
--         'VonHeikemen/lsp-zero.nvim',
--         branch = 'v3.x',
--         lazy = true,
--         config = false,
--         init = function()
--             vim.g.lsp_zero_extend_cmp = 0
--             vim.g.lsp_zero_extend_lspconfig = 0
--         end
--     },
--     {
--         'williamboman/mason.nvim',
--         lazy = false,
--         config = true,
--     },
--     {
--         'hrsh7th/nvim-cmp',
--         event = 'InsertEnter',
--         dependencies = {
--             'L3MON4D3/LuaSnip',
--             'hrsh7th/cmp-nvim-lsp',
--             'hrsh7th/cmp-buffer',
--             'hrsh7th/cmp-path',
--         },
--         config = function()
--             local lsp_zero = require('lsp-zero')
--             local cmp = require('cmp')
--             local cmp_action = lsp_zero.cmp_action()
--
--             cmp.setup({
--                 preselect = 'item',
--                 completion = {
--                     completeopt = 'menu,menuone,noinsert'
--                 },
--                 sources = {
--                     {name = 'nvim_lsp'},
--                     {name = 'buffer'},
--                     {name = 'path'}
--                 },
--                 mapping = cmp.mapping.preset.insert({
--                     ['<C-Space>'] = cmp.mapping.complete(),
--                     ['<C-u>'] = cmp.mapping.scroll_docs(-4),
--                     ['<C-d>'] = cmp.mapping.scroll_docs(4),
--                     ['<C-f>'] = cmp_action.luasnip_jump_forward(),
--                     ['<C-b>'] = cmp_action.luasnip_jump_backward(),
--                 }),
--                 snippet = {
--                     expand = function(args)
--                         require('luasnip').lsp_expand(args.body)
--                     end,
--                 },
--             })
--         end
--     },
--     {
--         'neovim/nvim-lspconfig',
--         cmd = {'LspInfo', 'LspInstall', 'LspStart'},
--         event = {'BufReadPre', 'BufNewFile'},
--         dependencies = {
--             {'hrsh7th/cmp-nvim-lsp'},
--             {'williamboman/mason-lspconfig.nvim'},
--         },
--         config = function()
--
--             local lsp_zero = require('lsp-zero')
--
--             lsp_zero.ensure_installed({
--                 'tsserver',
--                 'lua_ls',
--                 'pyright',
--                 'html',
--                 'cssls',
--             })
--
--             lsp_zero.on_attach(function(client, bufnr)
--
--                 local opts = {buffer = bufnr, remap = false}
--
--                 vim.keymap.set("n", "gd", function() vim.lsp.buf.definition() end, opts)
--                 vim.keymap.set("n", "K", function() vim.lsp.buf.hover() end, opts)
--                 vim.keymap.set("n", "<leader>vws", function() vim.lsp.buf.workspace_symbol() end, opts)
--                 vim.keymap.set("n", "<leader>vd", function() vim.diagnostic.open_float() end, opts)
--                 vim.keymap.set("n", "[d", function() vim.diagnostic.goto_next() end, opts)
--                 vim.keymap.set("n", "]d", function() vim.diagnostic.goto_prev() end, opts)
--                 vim.keymap.set("n", "<leader>vca", function() vim.lsp.buf.code_action() end, opts)
--                 vim.keymap.set("n", "<leader>vrr", function() vim.lsp.buf.references() end, opts)
--                 vim.keymap.set("n", "<leader>vrn", function() vim.lsp.buf.rename() end, opts)
--                 vim.keymap.set("i", "<C-h>", function() vim.lsp.buf.signature_help() end, opts)
--             end)
--
--             lsp_zero.set_sign_icons({
--                 error = '✘',
--                 warn = '▲',
--                 hint = '⚑',
--                 info = '»'
--             })
--
--             local servers = { "tsserver", "pyright", 'html', 'cssls', 'angularls'}
--             for _, lsp in ipairs(servers) do
--                 require('lspconfig')[lsp].setup {}
--             end
--         end,
--     }
}
